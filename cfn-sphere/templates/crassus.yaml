AWSTemplateFormatVersion: '2010-09-09'
Description: crassus (Cross Account Smart Software Update Service)
Outputs:
  inputSnsTopicARN:
    Description: Topic ARN to send stack update messages to
    Value:
      Ref: inputSnsTopic
  outputSnsTopicARN:
    Description: Topic ARN to receive messages from CFN/lambdas
    Value:
      Ref: outputSnsTopic
  lambdaFunctionName:
    Description: Name of the crassus Lambda function, to be used in seperate API call to allow
      subscription to input SNS topic
    Value:
      Ref: updateStackFunction
Parameters:
  bucketName:
    Default: is24-crassus
    Description: crassus distrubtion bucket that contains the Lambda function zip file
    Type: String
  zipFile:
    Description: Name of the crassus distribution zip file inside the bucket
    Type: String
    Default: crassus-latest.zip
  triggeringUserArn:
    AllowedPattern: arn:aws:iam::[0-9]{12}:[\S]+
    ConstraintDescription: must be a valid Amazon Resource Name e.g. arn:aws:iam::123456789012:role/cld-chain
    Description: ARN of the principal that is allowed to send stack update messages and listen for results
    Type: String
Resources:
  inputSnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Topic ARN to send stack update messages to
      Subscription:
      - Endpoint:
          Fn::GetAtt:
          - updateStackFunction
          - Arn
        Protocol: lambda
      TopicName:
        '|join|-':
          - Ref: AWS::StackName
          - input
  outputSnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Topic ARN to receive messages from CFN/lambdas
      TopicName:
        '|join|-':
          - Ref: AWS::StackName
          - output
      Subscription:
        -
          Endpoint:
            Fn::GetAtt:
              - outputSqsQueue
              - Arn
          Protocol: sqs
  inputSnsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
        - Action: sns:Publish
          Effect: Allow
          Principal:
            AWS:
              Ref: triggeringUserArn
          Resource:
            Ref: inputSnsTopic
        Version: '2012-10-17'
      Topics:
      - Ref: inputSnsTopic
  outputSqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        '|join|-':
          - Ref: AWS::StackName
          - output
  stackUpdateRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Sid: ''
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - '*'
            Effect: Allow
            Resource:
            - '*'
          Version: '2012-10-17'
        PolicyName: lambdaStackUpdatePolicy
  updateStackFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: bucketName
        S3Key:
          Ref: zipFile
      Description: updates a stack using cloudformation
      Handler: crassus_deployer_lambda.handler
      Role:
        Fn::GetAtt:
        - stackUpdateRole
        - Arn
      Runtime: python2.7
      Timeout: 15
  updateStackPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName:
        Ref: updateStackFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: inputSnsTopic
  OutputSqsPolicy:
    Type: "AWS::SQS::QueuePolicy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Id: OutputSqsPolicy
        Statement:
          -
            Sid: "Allow-SendMessage-to-outputSqsQueue-from-outputSnsTopic"
            Effect: "Allow"
            Principal: "*"
            Action:
              - "sqs:SendMessage"
            Resource: "*"
            Condition:
              ArnEquals:
                aws:SourceArn:
                  Ref: outputSnsTopic
      Queues:
        -
          Ref: outputSqsQueue
  OutputSqsReceivePolicy:
    Type: "AWS::SQS::QueuePolicy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Id: OutputSqsReceivePolicy
        Statement:
          -
            Sid: "Allow-ReceiveMessage-from-outputSqsQueue"
            Effect: "Allow"
            Principal:
              AWS:
                Ref: triggeringUserArn
            Action:
              - "sqs:ReceiveMessage"
            Resource: "*"
      Queues:
        -
          Ref: outputSqsQueue
